coordinator strategy:

top level: this program should:

*prep robot pose: torso, head, arm

loop:
 do_kitting(): {
 move_to_goal(kit_location_code);

 *get_kit() {
    ...acquire kit, place on pedestal
   }
 *move_to_goal(gearbox_table_code);
      (turn on robot freeze, if Gazebo)

 *success = get_part(part_code) {
   *invoke object-finder (for expected part)
   *choose object to grab (may require repositioning the robot)
   *move arm to approach, descend, 
   *enable gripper
   *move arm to depart; test object is still  grasped
   }

 *success = place_grasped_part(destination_code) {
   *move arm to place grasped  part in appropriate pocket of kit
    confirm object still  grasped
   *release part (drop in kit)
  }

 *move_to_goal(next_location_code);
 *get_part(part_code)
 *place_grasped_part(destination_code)

 ...

 *move_to_goal(kit_dropoff_location_code);
 *drop_off_kit()
 }

grasp_lib:  needs
for arm control:

  <build_depend>roscpp</build_depend>
<build_depend>control_msgs</build_depend>
<build_depend>actionlib</build_depend>
<build_depend>geometry_msgs</build_depend>
<build_depend>sensor_msgs</build_depend>
<build_depend>trajectory_msgs</build_depend>
<build_depend>fetch_fk_ik</build_depend>

for gripper:
gripper_interface




